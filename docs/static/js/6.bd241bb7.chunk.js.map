{"version":3,"sources":["components/commons/AddToCartButton/AddToCartButton.component.js","components/commons/AddToCartButton/AddToCartButton.styled.js","components/commons/AddToCartButton/AddToCartButton.container.js","components/commons/RadioGroup/RadioGroup.component.js","components/commons/RadioGroup/RadioGroup.container.js","components/commons/RadioGroup/RadioGroup.styled.js","components/DeviceDetail/components/DeviceActions/DeviceActions.component.js","components/DeviceDetail/components/DeviceActions/DeviceActions.styled.js","components/DeviceDetail/components/DeviceActions/DeviceActions.container.js","utils/state/stateReducer.js"],"names":["AddToCartButton","className","id","color","storage","addToCart","data-testid","onClick","styled","theme","colors","secondary","white","fonts","oswald","connect","dispatch","RadioGroup","radios","active","role","map","text","value","aria-checked","breakpoints","tablet","DeviceActions","details","options","price","generateState","Object","keys","reduce","acc","key","code","initialState","useReducer","stateReducer","state","setState","useEffect","generateRadios","name","firstLetterUpperCase","storages","primary","getDetails","prevState","update"],"mappings":"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","file":"static/js/6.bd241bb7.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddToCartButton = ({\r\n  className,\r\n  id,\r\n  color,\r\n  storage,\r\n  addToCart\r\n }) => {\r\n  return (\r\n    <button\r\n      data-testid=\"add-to-cart-button\"\r\n      className={className}\r\n      onClick={() => addToCart({ id, color, storage })}\r\n    >\r\n      Add to cart\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default AddToCartButton\r\n\r\nAddToCartButton.propTypes = {\r\n  className: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  color: PropTypes.number.isRequired,\r\n  storage: PropTypes.number.isRequired,\r\n  addToCart: PropTypes.func.isRequired,\r\n}","import styled from 'styled-components'\r\nimport AddToCartButton from './AddToCartButton.component'\r\n\r\nexport default styled(AddToCartButton)`\r\n  background-color: ${({ theme }) => theme.colors.secondary};\r\n  width: 100%;\r\n  padding: 10px;\r\n  color: ${({ theme }) => theme.colors.white};\r\n  text-transform: uppercase;\r\n  font-family: ${({ theme }) => theme.fonts.oswald};\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  transition: 0.16s ease;\r\n  border-radius: 4px;\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.white};\r\n    color: ${({ theme }) => theme.colors.secondary};\r\n    transform: scale(1.01);\r\n  }\r\n`","import { connect } from 'react-redux'\r\nimport { addToCart } from '../../../state/cart/actionCreators'\r\nimport AddToCartButton from './AddToCartButton.styled'\r\n\r\nconst mapStateToProps = () => ({})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addToCart: ({ id, color, storage }) => dispatch(addToCart({ id, color, storage }))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddToCartButton)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst RadioGroup = ({\r\n  className,\r\n  radios,\r\n  active,\r\n  onClick\r\n}) => {\r\n  return (\r\n    <div className={className} role=\"radiogroup\">\r\n      {radios.map(({ text, value}) => (\r\n        <button\r\n          key={value}\r\n          className={`radio ${active === value ? 'radio--active' : ''}`}\r\n          role=\"radio\"\r\n          onClick={() => onClick(value)}\r\n          data-testid={`radio-${value}`}\r\n          aria-checked={active === value}\r\n        >\r\n          <span className=\"radio-button\" />\r\n          <span className=\"radio-text\">{text}</span>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RadioGroup\r\n\r\nRadioGroup.propTypes = {\r\n  className: PropTypes.string.isRequired,\r\n  active: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.number\r\n  ]).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  radios: PropTypes.arrayOf(PropTypes.shape({\r\n    text: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.number\r\n    ]),\r\n  })).isRequired,\r\n}\r\n","import RadioGroup from './RadioGroup.styled'\r\n\r\nexport default RadioGroup","import styled from 'styled-components'\r\nimport RadioGroup from './RadioGroup.component'\r\n\r\nexport default styled(RadioGroup)`\r\n  display: flex;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.tablet}) {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .radio {\r\n    display: flex;\r\n    align-items: center;\r\n    color: ${({ theme }) => theme.colors.white};\r\n    margin-left: 30px;\r\n    cursor: pointer;\r\n    &:first-of-type {\r\n      margin-left: 0;\r\n    }\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.tablet}) {\r\n      margin-left: 0;\r\n      margin-bottom: 10px;\r\n      &:last-of-type {\r\n        margin-bottom: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  .radio--active {\r\n    .radio-button {\r\n      &:before {\r\n        content: '';\r\n        width: 10px;\r\n        height: 10px;\r\n        border-radius: 10px;\r\n        background-color: ${({ theme }) => theme.colors.white};\r\n        display: block;\r\n      }\r\n    }\r\n  }\r\n\r\n  .radio-button {\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 10px;\r\n    border: 2px solid ${({ theme }) => theme.colors.white};\r\n    margin-right: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n`","import React, { useReducer, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { firstLetterUpperCase } from '../../../../utils/text'\r\nimport { stateReducer } from '../../../../utils/state/stateReducer'\r\nimport AddToCartButton from '../../../commons/AddToCartButton/AddToCartButton.container'\r\nimport RadioGroup from '../../../commons/RadioGroup/RadioGroup.container'\r\nimport { deviceWithDetails } from '../../../../constants/models/devices'\r\n\r\nconst DeviceActions = ({ className, details, id }) => {\r\n  const { options, price } = details[id]\r\n\r\n  const generateState = () => Object.keys(options).reduce((acc, key) => ({\r\n    ...acc,\r\n    [key]: options[key][0].code\r\n  }), {})\r\n  \r\n  const initialState = options ? generateState() : {}\r\n  const [state, setState] = useReducer(stateReducer, initialState)\r\n\r\n  useEffect(() => {\r\n    options && setState(generateState())\r\n  }, [options])\r\n\r\n  const generateRadios = key => key.map(({ code, name }) => ({ text: name, value: code }))\r\n\r\n  return options ? (\r\n    <div className={className}>\r\n      {Object.keys(options).map(key => (\r\n        <div className=\"option\" key={key}>\r\n          <h3\r\n            className=\"option-title\"\r\n            data-testid=\"option-title\"\r\n          >\r\n            {firstLetterUpperCase(key)}\r\n          </h3>\r\n          <RadioGroup\r\n            radios={generateRadios(options[key])}\r\n            active={state[key]}\r\n            onClick={value => setState({ [key]: value })}\r\n          />\r\n        </div>\r\n      ))}\r\n      {state.colors && state.storages && price !== '' && (\r\n        <AddToCartButton\r\n          id={id}\r\n          color={state.colors}\r\n          storage={state.storages}\r\n        />\r\n      )}\r\n      {price === '' && (\r\n        <p className=\"unavailable\">At this time we are out of stock for this device. Please visit us soon to check availability.</p>\r\n      )}\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nexport default DeviceActions\r\n\r\nDeviceActions.propTypes = {\r\n  className: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  details: PropTypes.objectOf(deviceWithDetails).isRequired,\r\n}","import styled from 'styled-components'\r\nimport DeviceActions from './DeviceActions.component'\r\n\r\nexport default styled(DeviceActions)`\r\n  margin-top: 30px;\r\n  background-color: ${({ theme }) => theme.colors.primary};\r\n  padding: 20px;\r\n  color: ${({ theme }) => theme.colors.white};\r\n\r\n  .option {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .option-title {\r\n    font-size: 20px;\r\n    text-transform: uppercase;\r\n    font-weight: 700;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  .unavailable {\r\n    text-align: center;\r\n  }\r\n`","import { connect } from 'react-redux'\r\n\r\nimport { getDetails } from '../../../../state/devices/selectors'\r\nimport DeviceActions from './DeviceActions.styled'\r\n\r\nconst mapStateToProps = state => ({\r\n  details: getDetails(state)\r\n})\r\n\r\nconst mapDispatchToProps = () => ({})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeviceActions)","export const stateReducer = (prevState, update) => ({\r\n  ...prevState,\r\n  ...update,\r\n})"],"sourceRoot":""}